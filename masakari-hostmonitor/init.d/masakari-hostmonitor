#!/bin/bash

# Copyright(c) 2015 Nippon Telegraph and Telephone Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SCRIPT_DIR=/opt/masakari/hostmonitor
SCRIPT_FILE=$SCRIPT_DIR/masakari-hostmonitor.sh
PROGRAM_NAME=masakari-hostmonitor
USER=openstack

start_script () {
    status_script
    # If has already started, going to terminate.
    if [ $? -eq 0 ]; then
        echo "$PROGRAM_NAME start/running, process $PID" >&2
        return
    fi

    # Execute script.
    su - $USER -c "bash $SCRIPT_FILE" 1>/dev/null 2>&1 &

    cnt=0
    while [ $cnt -lt 10 ]
    do
        status_script
        if [ $? -eq 0 ]; then
            echo "$PROGRAM_NAME start/running, process $PID" >&2
            break
        fi
        cnt=`expr $cnt + 1`
    done

    if [ $cnt -eq 10 ]; then
        echo "$PROGRAM_NAME stop/waiting (error)" >&2
    fi
}

stop_script () {
    status_script
    # If has already stopped, going to terminate.
    if [ $? -eq 1 ]; then
        echo "$PROGRAM_NAME stop/waiting" >&2
        return
    fi

    sudo kill -9 $PID

    echo "$PROGRAM_NAME stop/waiting" >&2
}

status_script () {
    PID=`ps -aef | grep "bash $SCRIPT_FILE" | grep -v grep | grep -v "su -" | awk '{print $2}'`
    if [ -n "$PID" ]; then
        # Starting
        return 0
    else
        # Stopping
        return 1
    fi
}

EXIT_STATUS=0
case $1 in
    start)
        start_script
        ;;
    stop)
        stop_script
        ;;
    status)
        status_script
        if [ $? -eq 0 ]; then
            echo "$PROGRAM_NAME start/running, process $PID" >&2
        else
            echo "$PROGRAM_NAME stop/waiting" >&2
            EXIT_STATUS=3       # not running
        fi
        ;;
    restart)
        stop_script
        start_script
        ;;
    *)
        echo "Usage : $0 {start|stop|status|restart}" >&2
        EXIT_STATUS=1
        ;;
esac
exit $EXIT_STATUS

